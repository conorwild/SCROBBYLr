version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    restart: always
    image: rrecords_docker
    # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - .:/app
    ports:
      - 5010:5000
      - 5678:5678
    env_file:
      - .env/.dev
    networks:
      - live
    depends_on:
      - redis
      # - db

  # db:
  #   image: postgres:13-alpine
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     - POSTGRES_DB=flask_celery
  #     - POSTGRES_USER=flask_celery
  #     - POSTGRES_PASSWORD=flask_celery

  redis:
    image: redis:6-alpine
    hostname: redis
    networks:
      - live

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/flask/Dockerfile
    image: flask_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env/.dev
    networks:
      - live
    links:
      - redis
    depends_on:
      - redis
      # - db

  # flower:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/flask/Dockerfile
  #   image: flask_celery_flower
  #   command: /start-flower
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - .env/.dev
  #   environment:
  #     - FLASK_APP=rrecords
  #   networks:
  #     - live
  #   ports:
  #     - 5557:5555
  #   depends_on:
  #     - redis
  #     # - db

  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/flask/Dockerfile
  #   image: flask_celery_beat
  #   command: /start-celerybeat
  #   volumes:
  #     - .:/app
  #   networks:
  #     - live
  #   env_file:
  #     - .env/.dev
  #   environment:
  #     - FLASK_APP=rrecords
  #   depends_on:
  #     - redis

# volumes:
#   postgres_data:
networks:
  live: